# -*- mode: ruby -*-
HOST_PREFIX = "server"
NET = "192.168.10."
DOMAIN = ".local"

servers = [
  {
    :hostname => HOST_PREFIX + "1" + DOMAIN,
    :ip => NET + "11",
    :ssh_host => "20011",
    :ssh_vm => "22",
    :ram => 4096,
    :core => 1,
    :hdd_name => HOST_PREFIX + "1_hdd.vdi",
    :hdd_size => "10240"
  },
  {
    :hostname => HOST_PREFIX + "2" + DOMAIN,
    :ip => NET + "12",
    :ssh_host => "20012",
    :ssh_vm => "22",
    :ram => 4096,
    :core => 1,
    :hdd_name => HOST_PREFIX + "2_hdd.vdi",
    :hdd_size => "10240"
  },
  {
    :hostname => HOST_PREFIX + "3" + DOMAIN,
    :ip => NET + "13",
    :ssh_host => "20013",
    :ssh_vm => "22",
    :ram => 4096,
    :core => 1,
    :hdd_name => HOST_PREFIX + "3_hdd.vdi",
    :hdd_size => "10240"
  },
  {
    :hostname => HOST_PREFIX + "4" + DOMAIN,
    :ip => NET + "14",
    :ssh_host => "20014",
    :ssh_vm => "22",
    :ram => 4096,
    :core => 1,
    :hdd_name => HOST_PREFIX + "4_hdd.vdi",
    :hdd_size => "10240"
  },
  {
    :hostname => HOST_PREFIX + "5" + DOMAIN,
    :ip => NET + "15",
    :ssh_host => "20015",
    :ssh_vm => "22",
    :ram => 4096,
    :core => 1,
    :hdd_name => HOST_PREFIX + "5_hdd.vdi",
    :hdd_size => "10240"
  },
  {
    :hostname => HOST_PREFIX + "6" + DOMAIN,
    :ip => NET + "16",
    :ssh_host => "20016",
    :ssh_vm => "22",
    :ram => 4096,
    :core => 1,
    :hdd_name => HOST_PREFIX + "6_hdd.vdi",
    :hdd_size => "10240"
  }
]

Vagrant.configure(2) do |config|
  (1..6).each do |i|
    config.vm.synced_folder ".", "/vagrant", disabled: true
    servers.each do |machine|
      config.vm.define machine[:hostname] do |node|
        node.vm.box = "debian/stretch64"
        node.vm.hostname = machine[:hostname]
        node.vm.network "private_network", ip: machine[:ip]
        node.vm.network :forwarded_port, guest: machine[:ssh_vm], host: machine[:ssh_host]
        node.vm.provider "virtualbox" do |vb|
          vb.customize ["modifyvm", :id, "--memory", machine[:ram]]
          vb.customize ["modifyvm", :id, "--cpus", machine[:core]]
          vb.name = machine[:hostname]
          if (!machine[:hdd_name].nil?)
            unless File.exist?(machine[:hdd_name])
                vb.customize ["createhd", "--filename", machine[:hdd_name], "--size", machine[:hdd_size]]
            end
            vb.customize ["storageattach", :id, "--storagectl", "SATA Controller", "--port", 1, "--device", 0, "--type", "hdd", "--medium", machine[:hdd_name]]
          end
        end
        #node.vm.provision "shell" do |s|
        #  ssh_pub_key = File.expand_path("~#{ENV['USER']}/.ssh/id_rsa.pub")
        #  s.inline = <<-SHELL
        #    echo #{ssh_pub_key} >> /home/vagrant/.ssh/authorized_keys
        #    SHELL
        #end

        node.vm.provision "ansible" do |setup|
          setup.inventory_path = "../ansible/hosts"
          setup.playbook = "../ansible/roles/setup.yaml"
          setup.limit = "all"
          setup.become = true
          setup.extra_vars = { ansible_user: 'vagrant' }
        end
        if i == 6
          node.vm.provision "ansible" do |swarm|
            swarm.inventory_path = "../ansible/hosts"
            swarm.playbook = "../ansible/roles/swarm.yaml"
            swarm.limit = "all"
            swarm.become = true
            swarm.extra_vars = {
              swarm_iface: "eth1"
            }
            swarm.groups = {
              "manager" => [HOST_PREFIX + "[1:3]" + DOMAIN],
              "worker"  => [HOST_PREFIX + "[4:6]" + DOMAIN],
            }
            swarm.raw_arguments = [
              "-M ../ansible/library"
            ]
          end
        end
      end
    end
  end
end
