- hosts: nodes
  become: yes
  become_user: root
  remote_user: vagrant

  tasks:
    - name: Create directory for ssh-keys
      file: state=directory mode=0700 dest=/root/.ssh/

    - name: Adding rsa-key in /root/.ssh/authorized_keys
      copy: src=~/.ssh/id_rsa.pub dest=/root/.ssh/authorized_keys owner=root mode=0600
      register: rsa
      ignore_errors: yes

    - name: Adding dsa-key in /root/.ssh/authorized_keys
      copy: src=~/.ssh/id_dsa.pub dest=/root/.ssh/authorized_keys owner=root mode=0600
      when: rsa|failed

    - name: Checking DNS
      command: host -t A google.com
      register: ns
      ignore_errors: yes

    - name: Copying new configuration for DNS, if you have validation failed
      lineinfile: regexp="^nameserver " line="nameserver 8.8.8.8" dest=/etc/resolv.conf
      when: ns|failed

    - name: Check DNS, if applied new settings
      command: host -t A google.com
      when: ns|failed

    - name: Installing tools
      apt: >
        package={{ item }}
        state=present
        update_cache=yes
      with_items:
        - htop
        - mc
        - vim
        - git
        - nano
        - curl

    - name: Installing apt-transport-https
      apt: name=apt-transport-https state=latest

    - name: Installing ca-certificates
      apt: name=ca-certificates state=latest

    - name: Checking package python-apt
      command: dpkg -s python-apt
      register: pythonapt
      when: "ansible_os_family == 'Debian'"
      ignore_errors: yes

    - name: Installing python-apt, if it is not in the system
      shell: apt-get update && apt-get -y install python-apt
      when: "ansible_os_family == 'Debian' and pythonapt.stderr"

    - name: Installing pip
      apt: name=python-pip state=latest

    - name: Installing pip3
      apt: name=python3-pip state=latest

    - name: Installing docker-py
      command: pip install docker-py
      ignore_errors: yes

    - name: Installing dependencies
      apt: >
        name={{ item }}
        state=latest
        update_cache=yes
      with_items:
        - libpq-dev
        - python-psycopg2
      tags:
        - packages

    - name: Adding keys docker repository
      apt_key: >
        id=58118E89F3A912897C070ADBF76221572C52609D
        keyserver=hkp://p80.pool.sks-keyservers.net:80
        state=present

    - name: Adding docker repository
      apt_repository: >
        repo="deb https://apt.dockerproject.org/repo debian-jessie main"
        state=present
        update_cache=yes

    - name: Installing docker
      apt: >
        pkg={{item}}
        state=present
      with_items:
        - docker-engine

    - name: Setting up docker
      copy: content='DOCKER_OPTS=""'
        dest=/etc/default/docker
      notify: Перезапуск docker

    - name: Add the current user to group docker
      user: name=vagrant append=yes groups=docker

    - name: Installing docker-compose
      get_url:
        url: https://github.com/docker/compose/releases/download/1.17.0/docker-compose-Linux-x86_64
        dest: /usr/local/bin/docker-compose
        mode: 0755

    - name: Give execute permissions docker-compose
      file: dest=/usr/local/bin/docker-compose mode=a+x

  handlers:
      - name: Restart docker
        service:
          name: docker
          state: restarted
